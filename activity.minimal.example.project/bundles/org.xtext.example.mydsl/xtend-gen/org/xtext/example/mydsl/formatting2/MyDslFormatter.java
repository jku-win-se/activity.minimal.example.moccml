/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.formatting2;

import activity.minimal.example.activity.Activity;
import activity.minimal.example.activity.Root;
import activity.minimal.example.activity.Sequence;
import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;
  
  protected void _format(final Root root, @Extension final IFormattableDocument document) {
    EList<Activity> _activities = root.getActivities();
    for (final Activity activity : _activities) {
      document.<Activity>format(activity);
    }
  }
  
  protected void _format(final Activity activity, @Extension final IFormattableDocument document) {
    EList<Sequence> _sequences = activity.getSequences();
    for (final Sequence sequence : _sequences) {
      document.<Sequence>format(sequence);
    }
  }
  
  public void format(final Object activity, final IFormattableDocument document) {
    if (activity instanceof XtextResource) {
      _format((XtextResource)activity, document);
      return;
    } else if (activity instanceof Activity) {
      _format((Activity)activity, document);
      return;
    } else if (activity instanceof Root) {
      _format((Root)activity, document);
      return;
    } else if (activity instanceof EObject) {
      _format((EObject)activity, document);
      return;
    } else if (activity == null) {
      _format((Void)null, document);
      return;
    } else if (activity != null) {
      _format(activity, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(activity, document).toString());
    }
  }
}
